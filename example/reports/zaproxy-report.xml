<?xml version="1.0"?><OWASPZAPReport version="2.10.0" generated="Tue, 18 May 2021 15:41:46">
<site name="https://oneprofile.io" host="oneprofile.io" port="443" ssl="true"><alerts><alertitem>
  <pluginid>10038</pluginid>
  <alertRef>10038</alertRef>
  <alert>Content Security Policy (CSP) Header Not Set</alert>
  <name>Content Security Policy (CSP) Header Not Set</name>
  <riskcode>2</riskcode>
  <confidence>3</confidence>
  <riskdesc>Medium (High)</riskdesc>
  <desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page â€” covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/sitemap.xml</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>https://oneprofile.io/</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>https://oneprofile.io/robots.txt</uri>
  <method>GET</method>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support: &quot;Content-Security-Policy&quot; for Chrome 25+, Firefox 23+ and Safari 7+, &quot;X-Content-Security-Policy&quot; for Firefox 4.0+ and Internet Explorer 10+, and &quot;X-WebKit-CSP&quot; for Chrome 14+ and Safari 6+.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&lt;/p&gt;&lt;p&gt;http://www.html5rocks.com/en/tutorials/security/content-security-policy/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10023</pluginid>
  <alertRef>10023</alertRef>
  <alert>Information Disclosure - Debug Error Messages</alert>
  <name>Information Disclosure - Debug Error Messages</name>
  <riskcode>1</riskcode>
  <confidence>2</confidence>
  <riskdesc>Low (Medium)</riskdesc>
  <desc>&lt;p&gt;The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/robots.txt</uri>
  <method>GET</method>
  <evidence>Internal Server Error</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/sitemap.xml</uri>
  <method>GET</method>
  <evidence>Internal Server Error</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/</uri>
  <method>GET</method>
  <evidence>Internal Server Error</evidence>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Disable debugging messages before pushing to production.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10027</pluginid>
  <alertRef>10027</alertRef>
  <alert>Information Disclosure - Suspicious Comments</alert>
  <name>Information Disclosure - Suspicious Comments</name>
  <riskcode>0</riskcode>
  <confidence>2</confidence>
  <riskdesc>Informational (Medium)</riskdesc>
  <desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker. Note: Matches made within script blocks or files are against the entire content not only comments.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/auth/</uri>
  <method>GET</method>
  <evidence>later</evidence>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
  <otherinfo>&lt;p&gt;The following pattern was used: \bLATER\b and was detected in the element starting with: &quot;&lt;!--&lt;/p&gt;&lt;p&gt;  ~ JBoss, Home of Professional Open Source.&lt;/p&gt;&lt;p&gt;  ~ Copyright (c) 2011, Red Hat, Inc., and individual contributors&lt;/p&gt;&lt;p&gt;  ~ as indi&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>90022</pluginid>
  <alertRef>90022</alertRef>
  <alert>Application Error Disclosure</alert>
  <name>Application Error Disclosure</name>
  <riskcode>1</riskcode>
  <confidence>2</confidence>
  <riskdesc>Low (Medium)</riskdesc>
  <desc>&lt;p&gt;This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500 Internal Server Error</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/sitemap.xml</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500 Internal Server Error</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/robots.txt</uri>
  <method>GET</method>
  <evidence>HTTP/1.1 500 Internal Server Error</evidence>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10036</pluginid>
  <alertRef>10036</alertRef>
  <alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
  <name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/sitemap.xml</uri>
  <method>GET</method>
  <evidence>nginx/1.19.3</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/</uri>
  <method>GET</method>
  <evidence>nginx/1.19.3</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/auth</uri>
  <method>GET</method>
  <evidence>nginx/1.19.3</evidence>
  </instance>
  <instance>
  <uri>https://oneprofile.io/robots.txt</uri>
  <method>GET</method>
  <evidence>nginx/1.19.3</evidence>
  </instance>
  </instances>
  <count>4</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;http://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;http://msdn.microsoft.com/en-us/library/ff648552.aspx#ht_urlscan_007&lt;/p&gt;&lt;p&gt;http://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx&lt;/p&gt;&lt;p&gt;http://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
  <cweid>200</cweid>
  <wascid>13</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10035</pluginid>
  <alertRef>10035</alertRef>
  <alert>Strict-Transport-Security Header Not Set</alert>
  <name>Strict-Transport-Security Header Not Set</name>
  <riskcode>1</riskcode>
  <confidence>3</confidence>
  <riskdesc>Low (High)</riskdesc>
  <desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/sitemap.xml</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>https://oneprofile.io/</uri>
  <method>GET</method>
  </instance>
  <instance>
  <uri>https://oneprofile.io/robots.txt</uri>
  <method>GET</method>
  </instance>
  </instances>
  <count>3</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;http://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;http://tools.ietf.org/html/rfc6797&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
<alertitem>
  <pluginid>10055</pluginid>
  <alertRef>10055</alertRef>
  <alert>CSP: Wildcard Directive</alert>
  <name>CSP: Wildcard Directive</name>
  <riskcode>2</riskcode>
  <confidence>2</confidence>
  <riskdesc>Medium (Medium)</riskdesc>
  <desc>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined: &lt;/p&gt;&lt;p&gt;script-src, script-src-elem, script-src-attr, style-src, style-src-elem, style-src-attr, img-src, connect-src, font-src, media-src, manifest-src, worker-src, prefetch-src, form-action&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The directive(s): form-action are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
  <instances>
  <instance>
  <uri>https://oneprofile.io/auth/</uri>
  <method>GET</method>
  <param>Content-Security-Policy</param>
  <evidence>frame-src &apos;self&apos;; frame-ancestors &apos;self&apos;; object-src &apos;none&apos;;</evidence>
  </instance>
  </instances>
  <count>1</count>
  <solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
  <reference>&lt;p&gt;http://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;http://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;http://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;http://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/shapesecurity/salvation&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
  <cweid>16</cweid>
  <wascid>15</wascid>
  <sourceid>3</sourceid>
</alertitem>
</alerts></site></OWASPZAPReport>